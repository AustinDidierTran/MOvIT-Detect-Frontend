// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Password Tests should macth snapshot when password failed 1`] = `
<Connect(Password)
  failed={true}
  onForgotPassword={[Function]}
  onSubmit={[Function]}
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Password
    dispatch={[Function]}
    failed={true}
    language="en"
    onForgotPassword={[Function]}
    onSubmit={[Function]}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
  >
    <div
      className="row"
    >
      <div
        className="ui-inputgroup col-8 offset-2"
      >
        <input
          className="form-control"
          id="password"
          onChange={[Function]}
          onKeyPress={[Function]}
          placeholder="login.password.en"
          style={
            Object {
              "borderColor": "red",
            }
          }
          type="password"
          value=""
        />
        <Button
          className="ui-button-secondary"
          cornerStyleClass="ui-corner-all"
          icon="fa fa-sign-in"
          iconPos="left"
          id="loginBtn"
          label={null}
          onClick={[Function]}
          type="submit"
        >
          <button
            className="ui-button ui-widget ui-state-default ui-corner-all ui-button-secondary ui-button-icon-only"
            id="loginBtn"
            onClick={[Function]}
            type="submit"
          >
            <span
              className="fa fa-sign-in ui-c ui-button-icon-left"
            />
            <span
              className="ui-button-text ui-c"
            >
              ui-btn
            </span>
          </button>
        </Button>
      </div>
      <div
        className="ui-inputgroup col-8 offset-2"
      >
        <button
          className="btn btn-link pl-0"
          id="forgotPasswordBtn"
          onClick={[Function]}
          type="button"
        >
          login.forgotPassword.en
        </button>
      </div>
      <div
        className="row"
        style={
          Object {
            "marginTop": "2px",
          }
        }
      >
        <div
          className="col-8 offset-2"
        >
          <Message
            className={null}
            id="errorMsg"
            severity="error"
            style={null}
            text="login.wrongPassword.en"
          >
            <div
              aria-live="polite"
              className="ui-message ui-widget ui-corner-all ui-message-error"
              id="errorMsg"
              style={null}
            >
              <span
                className="ui-message-icon pi pi-fw pi-times"
              />
              <span
                className="ui-message-text"
              >
                login.wrongPassword.en
              </span>
            </div>
          </Message>
        </div>
      </div>
    </div>
  </Password>
</Connect(Password)>
`;

exports[`Password Tests should match the snapshot 1`] = `
<Connect(Password)
  failed={false}
  onForgotPassword={[Function]}
  onSubmit={[Function]}
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Password
    dispatch={[Function]}
    failed={false}
    language="en"
    onForgotPassword={[Function]}
    onSubmit={[Function]}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    storeSubscription={
      Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      }
    }
  >
    <div
      className="row"
    >
      <div
        className="ui-inputgroup col-8 offset-2"
      >
        <input
          className="form-control"
          id="password"
          onChange={[Function]}
          onKeyPress={[Function]}
          placeholder="login.password.en"
          style={Object {}}
          type="password"
          value=""
        />
        <Button
          className="ui-button-secondary"
          cornerStyleClass="ui-corner-all"
          icon="fa fa-sign-in"
          iconPos="left"
          id="loginBtn"
          label={null}
          onClick={[Function]}
          type="submit"
        >
          <button
            className="ui-button ui-widget ui-state-default ui-corner-all ui-button-secondary ui-button-icon-only"
            id="loginBtn"
            onClick={[Function]}
            type="submit"
          >
            <span
              className="fa fa-sign-in ui-c ui-button-icon-left"
            />
            <span
              className="ui-button-text ui-c"
            >
              ui-btn
            </span>
          </button>
        </Button>
      </div>
      <div
        className="ui-inputgroup col-8 offset-2"
      >
        <button
          className="btn btn-link pl-0"
          id="forgotPasswordBtn"
          onClick={[Function]}
          type="button"
        >
          login.forgotPassword.en
        </button>
      </div>
    </div>
  </Password>
</Connect(Password)>
`;
